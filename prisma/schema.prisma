// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                 String            @id @default(uuid())
  name               String?
  email              String?           @unique
  emailVerified      DateTime?
  username           String?           @unique
  image              String?
  hashedPassword     String?
  githubProfileLink  String?
  githubProfilePhoto String?
  projects           Project[]
  followers          Int?
  favoritesProjects  FavoriteProject[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Account   Account[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Project {
  id            String         @id @default(uuid())
  name          String
  description   String
  deployedLink  String?
  linkRepo      String
  technologies  Technology[]
  projectImages ProjectImage[]
  likes         Int
  user          User?           @relation(fields: [userId], references: [id])
  userId        String?
}

model FavoriteProject {
  id          String @id @default(uuid())
  name        String
  author      User   @relation(fields: [authorId], references: [id])
  authorId    String
  projectLink String
}

model Technology {
  id        String   @id @default(uuid())
  name      String
  Project   Project? @relation(fields: [projectId], references: [id])
  projectId String?
}

model ProjectImage {
  id        String   @id @default(uuid())
  url       String
  Project   Project? @relation(fields: [projectId], references: [id])
  projectId String?
}
